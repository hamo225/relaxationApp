* {
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  height: 100vh;
  background-image: url(/img/forest.jpg);
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  /* Overflow hidden removes the scroll bars */
  overflow: hidden;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: white;
  font-size: 1.5rem;
  font-family: monospace;
}

.container {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: auto;
  height: 300px;
  width: 300px;
  position: relative;
  transform: scale(1);
}

/* using positioning to center the circle withing the container that has multiple elements overlapping */
.circle {
  background-color: rgb(6, 34, 4);
  height: 100%;
  width: 100%;
  border-radius: 50%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}

/* Setting the gradient circle - is basically just a little larger circle behind the black one */
/* working with conic-gradient */
.gradient-circle {
  background: conic-gradient(
    #55b7a4 0%,
    #4ca493 40%,
    #fff 40%,
    #fff 60%,
    #336d62 60%,
    #336d62 100%
  );
  height: 320px;
  width: 320px;
  border-radius: 50%;
  position: absolute;
  top: -10px;
  left: -10px;
  z-index: -2;
}

.pointer {
  background-color: white;
  border-radius: 50%;
  height: 20px;
  width: 20px;
  display: block;
}

.pointer-container {
  position: absolute;
  top: -40px;
  left: 140px;
  width: 20px;
  height: 190px;
  /* background-color: aqua; */
  animation: rotate 7.5s linear forwards infinite;
  transform-origin: bottom center;
}
/* adding keyframe animation - the pointer container will rotate */
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.container.grow {
  animation: grow 3s linear forwards;
}

@keyframes grow {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.2);
  }
}

.container.shrink {
  animation: shrink 3s linear forwards;
}

@keyframes shrink {
  from {
    transform: scale(1.2);
  }
  to {
    transform: scale(1);
  }
}
